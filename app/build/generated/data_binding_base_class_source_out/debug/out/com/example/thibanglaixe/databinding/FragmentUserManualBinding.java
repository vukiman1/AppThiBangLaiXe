// Generated by view binder compiler. Do not edit!
package com.example.thibanglaixe.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.thibanglaixe.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentUserManualBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button buttonBack;

  @NonNull
  public final Toolbar toolbarBack;

  @NonNull
  public final TextView tvDetail1;

  @NonNull
  public final TextView tvDetail2;

  @NonNull
  public final TextView tvDetail3;

  @NonNull
  public final TextView tvDetail4;

  @NonNull
  public final TextView tvIntro;

  private FragmentUserManualBinding(@NonNull LinearLayout rootView, @NonNull Button buttonBack,
      @NonNull Toolbar toolbarBack, @NonNull TextView tvDetail1, @NonNull TextView tvDetail2,
      @NonNull TextView tvDetail3, @NonNull TextView tvDetail4, @NonNull TextView tvIntro) {
    this.rootView = rootView;
    this.buttonBack = buttonBack;
    this.toolbarBack = toolbarBack;
    this.tvDetail1 = tvDetail1;
    this.tvDetail2 = tvDetail2;
    this.tvDetail3 = tvDetail3;
    this.tvDetail4 = tvDetail4;
    this.tvIntro = tvIntro;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentUserManualBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentUserManualBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_user_manual, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentUserManualBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonBack;
      Button buttonBack = ViewBindings.findChildViewById(rootView, id);
      if (buttonBack == null) {
        break missingId;
      }

      id = R.id.toolbarBack;
      Toolbar toolbarBack = ViewBindings.findChildViewById(rootView, id);
      if (toolbarBack == null) {
        break missingId;
      }

      id = R.id.tv_detail1;
      TextView tvDetail1 = ViewBindings.findChildViewById(rootView, id);
      if (tvDetail1 == null) {
        break missingId;
      }

      id = R.id.tv_detail2;
      TextView tvDetail2 = ViewBindings.findChildViewById(rootView, id);
      if (tvDetail2 == null) {
        break missingId;
      }

      id = R.id.tv_detail3;
      TextView tvDetail3 = ViewBindings.findChildViewById(rootView, id);
      if (tvDetail3 == null) {
        break missingId;
      }

      id = R.id.tv_detail4;
      TextView tvDetail4 = ViewBindings.findChildViewById(rootView, id);
      if (tvDetail4 == null) {
        break missingId;
      }

      id = R.id.tv_intro;
      TextView tvIntro = ViewBindings.findChildViewById(rootView, id);
      if (tvIntro == null) {
        break missingId;
      }

      return new FragmentUserManualBinding((LinearLayout) rootView, buttonBack, toolbarBack,
          tvDetail1, tvDetail2, tvDetail3, tvDetail4, tvIntro);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
